<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pipi.dao.mapper.OrderItemMapper" >
  <resultMap id="BaseResultMap" type="com.pipi.dao.pojo.OrderItem" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="disk_id" property="diskId" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="num" property="num" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="REAL" />
    <result column="dis_price" property="disPrice" jdbcType="REAL" />
    <result column="total_price" property="totalPrice" jdbcType="REAL" />
    <result column="img" property="img" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, disk_id, order_id, num, title, price, dis_price, total_price, img
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pipi.dao.pojo.OrderItemExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from order_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from order_item
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from order_item
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.pipi.dao.pojo.OrderItem" >
    insert into order_item (id, disk_id, order_id, 
      num, title, price, dis_price, 
      total_price, img)
    values (#{id,jdbcType=INTEGER}, #{diskId,jdbcType=INTEGER}, #{orderId,jdbcType=VARCHAR}, 
      #{num,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{price,jdbcType=REAL}, #{disPrice,jdbcType=REAL}, 
      #{totalPrice,jdbcType=REAL}, #{img,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.pipi.dao.pojo.OrderItem" >
    insert into order_item
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="diskId != null" >
        disk_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="disPrice != null" >
        dis_price,
      </if>
      <if test="totalPrice != null" >
        total_price,
      </if>
      <if test="img != null" >
        img,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="diskId != null" >
        #{diskId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=REAL},
      </if>
      <if test="disPrice != null" >
        #{disPrice,jdbcType=REAL},
      </if>
      <if test="totalPrice != null" >
        #{totalPrice,jdbcType=REAL},
      </if>
      <if test="img != null" >
        #{img,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pipi.dao.pojo.OrderItem" >
    update order_item
    <set >
      <if test="diskId != null" >
        disk_id = #{diskId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=REAL},
      </if>
      <if test="disPrice != null" >
        dis_price = #{disPrice,jdbcType=REAL},
      </if>
      <if test="totalPrice != null" >
        total_price = #{totalPrice,jdbcType=REAL},
      </if>
      <if test="img != null" >
        img = #{img,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pipi.dao.pojo.OrderItem" >
    update order_item
    set disk_id = #{diskId,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL},
      dis_price = #{disPrice,jdbcType=REAL},
      total_price = #{totalPrice,jdbcType=REAL},
      img = #{img,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>