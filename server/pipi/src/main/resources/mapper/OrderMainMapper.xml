<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pipi.dao.mapper.OrderMainMapper">
	<resultMap id="BaseResultMap" type="com.pipi.dao.pojo.OrderMain">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="openid" property="openid" jdbcType="VARCHAR" />
		<result column="total_money" property="totalMoney" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="payment_time" property="paymentTime" jdbcType="TIMESTAMP" />
		<result column="consign_time" property="consignTime" jdbcType="TIMESTAMP" />
		<result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
		<result column="close_time" property="closeTime" jdbcType="TIMESTAMP" />
		<result column="remarks" property="remarks" jdbcType="VARCHAR" />
		<result column="is_evaluate" property="isEvaluate" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, openid, total_money, status, create_time, update_time,
		payment_time,
		consign_time,
		end_time, close_time, remarks, is_evaluate
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.pipi.dao.pojo.OrderMainExample">
		select
		<if test="distinct">
			distinct
		</if>
		'false' as QUERYID,
		<include refid="Base_Column_List" />
		from order_main
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from order_main
		where id = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		order_main
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.pipi.dao.pojo.OrderMain">
		insert into order_main (id,
		openid, total_money,
		status, create_time, update_time,
		payment_time,
		consign_time, end_time,
		close_time, remarks, is_evaluate
		)
		values
		(#{id,jdbcType=VARCHAR}, #{openid,jdbcType=VARCHAR},
		#{totalMoney,jdbcType=VARCHAR},
		#{status,jdbcType=INTEGER},
		#{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
		#{paymentTime,jdbcType=TIMESTAMP}, #{consignTime,jdbcType=TIMESTAMP},
		#{endTime,jdbcType=TIMESTAMP},
		#{closeTime,jdbcType=TIMESTAMP},
		#{remarks,jdbcType=VARCHAR}, #{isEvaluate,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.pipi.dao.pojo.OrderMain">
		insert into order_main
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="openid != null">
				openid,
			</if>
			<if test="totalMoney != null">
				total_money,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="paymentTime != null">
				payment_time,
			</if>
			<if test="consignTime != null">
				consign_time,
			</if>
			<if test="endTime != null">
				end_time,
			</if>
			<if test="closeTime != null">
				close_time,
			</if>
			<if test="remarks != null">
				remarks,
			</if>
			<if test="isEvaluate != null">
				is_evaluate,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="openid != null">
				#{openid,jdbcType=VARCHAR},
			</if>
			<if test="totalMoney != null">
				#{totalMoney,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="paymentTime != null">
				#{paymentTime,jdbcType=TIMESTAMP},
			</if>
			<if test="consignTime != null">
				#{consignTime,jdbcType=TIMESTAMP},
			</if>
			<if test="endTime != null">
				#{endTime,jdbcType=TIMESTAMP},
			</if>
			<if test="closeTime != null">
				#{closeTime,jdbcType=TIMESTAMP},
			</if>
			<if test="remarks != null">
				#{remarks,jdbcType=VARCHAR},
			</if>
			<if test="isEvaluate != null">
				#{isEvaluate,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.pipi.dao.pojo.OrderMain">
		update order_main
		<set>
			<if test="openid != null">
				openid = #{openid,jdbcType=VARCHAR},
			</if>
			<if test="totalMoney != null">
				total_money = #{totalMoney,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="paymentTime != null">
				payment_time = #{paymentTime,jdbcType=TIMESTAMP},
			</if>
			<if test="consignTime != null">
				consign_time = #{consignTime,jdbcType=TIMESTAMP},
			</if>
			<if test="endTime != null">
				end_time = #{endTime,jdbcType=TIMESTAMP},
			</if>
			<if test="closeTime != null">
				close_time = #{closeTime,jdbcType=TIMESTAMP},
			</if>
			<if test="remarks != null">
				remarks = #{remarks,jdbcType=VARCHAR},
			</if>
			<if test="isEvaluate != null">
				is_evaluate = #{isEvaluate,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.pipi.dao.pojo.OrderMain">
		update order_main
		set openid = #{openid,jdbcType=VARCHAR},
		total_money =
		#{totalMoney,jdbcType=VARCHAR},
		status = #{status,jdbcType=INTEGER},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		update_time =
		#{updateTime,jdbcType=TIMESTAMP},
		payment_time =
		#{paymentTime,jdbcType=TIMESTAMP},
		consign_time =
		#{consignTime,jdbcType=TIMESTAMP},
		end_time =
		#{endTime,jdbcType=TIMESTAMP},
		close_time =
		#{closeTime,jdbcType=TIMESTAMP},
		remarks = #{remarks,jdbcType=VARCHAR},
		is_evaluate = #{isEvaluate,jdbcType=INTEGER}
		where id =
		#{id,jdbcType=VARCHAR}
	</update>
	<select id="getStatistics" parameterType="java.util.Map"
		resultType="com.pipi.entity.Statistics">
		SELECT
		o. STATUS AS STATUS,
		count(*) AS `sum`,
		sum(o.total_money) AS
		`total`
		FROM
		order_main AS o
		<where>
			<if test="status != null">
				o.status = #{status}
			</if>
			<if test="startDate != null">
				AND o.create_time &gt;= #{startDate}
			</if>
			<if test="endDate != null">
				AND o.create_time &lt;= #{endDate}
			</if>
		</where>
	</select>
</mapper>