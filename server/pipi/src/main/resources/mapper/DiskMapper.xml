<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pipi.dao.mapper.DiskMapper">
	<resultMap id="BaseResultMap" type="com.pipi.dao.pojo.Disk">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="menu_id" property="menuId" jdbcType="INTEGER" />
		<result column="img" property="img" jdbcType="VARCHAR" />
		<result column="title" property="title" jdbcType="VARCHAR" />
		<result column="price" property="price" jdbcType="REAL" />
		<result column="dis_price" property="disPrice" jdbcType="REAL" />
		<result column="sell_point" property="sellPoint" jdbcType="VARCHAR" />
		<result column="created" property="created" jdbcType="TIMESTAMP" />
		<result column="updated" property="updated" jdbcType="TIMESTAMP" />
		<result column="sellnum" property="sellnum" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, menu_id, img, title, price, dis_price, sell_point,
		created, updated,
		sellnum,
		status
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.pipi.dao.pojo.DiskExample">
		select
		<if test="distinct">
			distinct
		</if>
		'false' as QUERYID,
		<include refid="Base_Column_List" />
		from disk
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from disk
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from disk
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.pipi.dao.pojo.Disk">
		insert into disk (id, menu_id,
		img,
		title, price, dis_price, sell_point,
		created, updated, sellnum,
		status)
		values (#{id,jdbcType=INTEGER}, #{menuId,jdbcType=INTEGER},
		#{img,jdbcType=VARCHAR},
		#{title,jdbcType=VARCHAR},
		#{price,jdbcType=REAL}, #{disPrice,jdbcType=REAL},
		#{sellPoint,jdbcType=VARCHAR},
		#{created,jdbcType=TIMESTAMP},
		#{updated,jdbcType=TIMESTAMP}, #{sellnum,jdbcType=INTEGER},
		#{status,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.pipi.dao.pojo.Disk">
		insert into disk
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="menuId != null">
				menu_id,
			</if>
			<if test="img != null">
				img,
			</if>
			<if test="title != null">
				title,
			</if>
			<if test="price != null">
				price,
			</if>
			<if test="disPrice != null">
				dis_price,
			</if>
			<if test="sellPoint != null">
				sell_point,
			</if>
			<if test="created != null">
				created,
			</if>
			<if test="updated != null">
				updated,
			</if>
			<if test="sellnum != null">
				sellnum,
			</if>
			<if test="status != null">
				status,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="menuId != null">
				#{menuId,jdbcType=INTEGER},
			</if>
			<if test="img != null">
				#{img,jdbcType=VARCHAR},
			</if>
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="price != null">
				#{price,jdbcType=REAL},
			</if>
			<if test="disPrice != null">
				#{disPrice,jdbcType=REAL},
			</if>
			<if test="sellPoint != null">
				#{sellPoint,jdbcType=VARCHAR},
			</if>
			<if test="created != null">
				#{created,jdbcType=TIMESTAMP},
			</if>
			<if test="updated != null">
				#{updated,jdbcType=TIMESTAMP},
			</if>
			<if test="sellnum != null">
				#{sellnum,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.pipi.dao.pojo.Disk">
		update disk
		<set>
			<if test="menuId != null">
				menu_id = #{menuId,jdbcType=INTEGER},
			</if>
			<if test="img != null">
				img = #{img,jdbcType=VARCHAR},
			</if>
			<if test="title != null">
				title = #{title,jdbcType=VARCHAR},
			</if>
			<if test="price != null">
				price = #{price,jdbcType=REAL},
			</if>
			<if test="disPrice != null">
				dis_price = #{disPrice,jdbcType=REAL},
			</if>
			<if test="sellPoint != null">
				sell_point = #{sellPoint,jdbcType=VARCHAR},
			</if>
			<if test="created != null">
				created = #{created,jdbcType=TIMESTAMP},
			</if>
			<if test="updated != null">
				updated = #{updated,jdbcType=TIMESTAMP},
			</if>
			<if test="sellnum != null">
				sellnum = #{sellnum,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.pipi.dao.pojo.Disk">
		update disk
		set
		menu_id = #{menuId,jdbcType=INTEGER},
		img = #{img,jdbcType=VARCHAR},
		title = #{title,jdbcType=VARCHAR},
		price = #{price,jdbcType=REAL},
		dis_price = #{disPrice,jdbcType=REAL},
		sell_point =
		#{sellPoint,jdbcType=VARCHAR},
		created = #{created,jdbcType=TIMESTAMP},
		updated = #{updated,jdbcType=TIMESTAMP},
		sellnum =
		#{sellnum,jdbcType=INTEGER},
		status = #{status,jdbcType=INTEGER}
		where
		id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateAllDiskSellNum" parameterType="int">
		UPDATE disk AS d
		SET d.sellnum = #{num}
	</update>
</mapper>